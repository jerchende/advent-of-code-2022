# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
          server-id: github
          server-username: GITHUB_USER_REF
          server-password: GITHUB_TOKEN_REF # env variable name for GitHub Personal Access Token

      - name: Build with Maven
        run: mvn -B test --file pom.xml
        env:
          GITHUB_USER_REF: jerchende
          GITHUB_TOKEN_REF: ${{ secrets.PACKAGE_REPO_PASSWORD }}

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      # Update AOC Badge
      - uses: joblo2213/aoc-badges-action@v3
        with:
          userid: 1162495                        # your user id, see setup on how to obtain
          session: ${{ secrets.AOC_SESSION }}    # secret containing session code, see setup on how to obtain

          #         Optional inputs:
          #
          year: 2022                                                                                     # The year for which stats should be retrieved
          #         leaderboard: 'https://adventofcode.com/2020/leaderboard/private/view/00000.json'               # The url of the leaderboard from witch the data is fetched. Typically your private leaderboard.
          #         file: 'README.md'                                                                              # The file that contains the badges
          #         dayRegex: '(?<=https:\/\/img\.shields\.io\/badge\/day%20📅-)[0-9]+(?=-blue)'                   # Regular expression that finds the content of the day badge in your file.
          #         starsRegex: '(?<=https:\/\/img\.shields\.io\/badge\/stars%20⭐-)[0-9]+(?=-yellow)'             # Regular expression that finds the content of the stars badge in your file.
          #         daysCompletedRegex: '(?<=https:\/\/img\.shields\.io\/badge\/days%20completed-)[0-9]+(?=-red)'  # Regular expression that finds the content of the days completed badge iun your file.

      - uses: stefanzweifel/git-auto-commit-action@v4     # Step that pushes these local changes back to your github repo
        with:
          commit_message: Update badges
          file_pattern: 'README.md'

